---
layout: post
title: "mac + zsh + vim + ctags + vim_rails"
published: true
annotation: В этой заметке описана проблема организации работы ctags в vim в MacOS, если в терминале ты пользуешься zsh. Что использовать и как решить эту проблему.
---
h1. {{ page.title }}

p(meta). 16 Jan 2012

В свое время я работал исключительно в Eclipse. Там была фича, используя которую я нажимал F3 и попадал на определение метода, класса и т.д. Очень удобная вещь. Такое же есть в RubyMine.

Без проблем можно сделать себе то же самое в vim.
Vim использует механизм тегов, к. предоставляет утилита "ctags":http://ctags.sourceforge.net/. То, что идет в стандартной поставке для MacOS никуда не годится, т.к. там совсем древняя версия. Надо ставить "Homebrew":http://mxcl.github.com/homebrew/ (если еще не стоит) и, используя brew, поставить себе новые ctags.

@brew install ctags@

После этого в vim можно пользоваться своими или уже готовыми командами для генерации тегов. К примеру, для Rails-разработчиков существует плагин "vim-rails":https://github.com/tpope/vim-rails. В нем, помимо прочего, есть команда @:Rtags@, набрав которую прямо в редакторе мы получим готовый набор тегов. После этого ставим курсор на имя метода/класса и нажимаем @Ctrl+]@ (стандартная комбинация "путешествия" по тегам в виме) и мы там, где надо.

Но!

Может быть и так, что это не сработает и vim упорно вызывает старые ctags.
Вопрос: пользуешься zsh? Поздравляю! Я – тоже. Решается просто:

@sudo mv /etc/zshenv /etc/zshprofile@

Все! Готово.
